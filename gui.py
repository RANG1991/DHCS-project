import tkinter as tk
from tkinter import Text, END, Radiobutton, W
from PIL import Image, ImageTk
from extract_values_from_CSV import read_csvs_english_hebrew
import crawler

radio_button = 1
isr_ratio = 1
oth_ratio = 2

def on_click_right(event, text_box):
    text_box.config(state='normal')
    value = int(text_box.get("1.0", END))
    value += 1
    text_box.delete("1.0", 'end')
    text_box.insert("1.0", value)
    text_box.tag_add("center", "1.0", "end")
    text_box.config(state='disabled')

def on_click_left(event, text_box):
    text_box.config(state='normal')
    value = int(text_box.get("1.0", END))
    if (value == 0):
        return
    value -= 1
    text_box.delete("1.0", 'end')
    text_box.insert("1.0", value)
    text_box.tag_add("center", "1.0", "end")
    text_box.config(state='disabled')


root = tk.Tk()
root.title("DHCS 2019A Project")
root.geometry("636x486")
image = tk.PhotoImage(file="pictures/Picture1.gif")
label = tk.Label(image=image)
label.pack()
image_right_arrow = Image.open("pictures/right_arrow.gif")
photo_right_arrow = ImageTk.PhotoImage(image_right_arrow)
image_left_arrow = Image.open("pictures/left_arrow.gif")
photo_left_arrow = ImageTk.PhotoImage(image_left_arrow)

image_plain_reader_weights = Image.open("pictures/plain_reader_weights.gif")
photo_plain_reader_weights = ImageTk.PhotoImage(image_plain_reader_weights)
plain_reader_weights = tk.Label(root, image=photo_plain_reader_weights)
plain_reader_weights.place(x=135, y=269, height=43, width=204)
image_researcher_weights = Image.open("pictures/researcher_weights.gif")
photo_researcher_weights = ImageTk.PhotoImage(image_researcher_weights)
researcher_weights = tk.Label(root, image=photo_researcher_weights)
researcher_weights.place(x=365, y=268, height=43, width=204)

T1 = Text(root, height=200, width=300)
T1.place(x=450, y=45, height=22, width=44)
T1.tag_configure("center", justify='center')
T1.insert("1.0", 1)
T1.tag_add("center", "1.0", "end")
T1.config(state='disabled')
label_right_arrow1 = tk.Label(root, image=photo_right_arrow)
label_right_arrow1.place(x=500, y=45, height=19, width=20)
label_right_arrow1.bind('<Button-1>', lambda event, arg=T1: on_click_right(event, arg))
label_left_arrow1 = tk.Label(root, image=photo_left_arrow)
label_left_arrow1.place(x=424, y=45, height=19, width=20)
label_left_arrow1.bind('<Button-1>', lambda event, arg=T1: on_click_left(event, arg))


T2 = Text(root, height=200, width=300)
T2.place(x=450, y=68, height=22, width=44)
T2.tag_configure("center", justify='center')
T2.insert("1.0", 1)
T2.tag_add("center", "1.0", "end")
T2.config(state='disabled')
label_right_arrow2 = tk.Label(root, image=photo_right_arrow)
label_right_arrow2.place(x=500, y=68, height=19, width=20)
label_right_arrow2.bind('<Button-1>', lambda event, arg=T2: on_click_right(event, arg))
label_left_arrow2 = tk.Label(root, image=photo_left_arrow)
label_left_arrow2.place(x=424, y=68, height=19, width=20)
label_left_arrow2.bind('<Button-1>', lambda event, arg=T2: on_click_left(event, arg))

T3 = Text(root, height=200, width=300)
T3.place(x=450, y=91, height=22, width=44)
T3.tag_configure("center", justify='center')
T3.insert("1.0", 1)
T3.tag_add("center", "1.0", "end")
T3.config(state='disabled')
label_right_arrow3 = tk.Label(root, image=photo_right_arrow)
label_right_arrow3.place(x=500, y=91, height=19, width=20)
label_right_arrow3.bind('<Button-1>', lambda event, arg=T3: on_click_right(event, arg))
label_left_arrow3 = tk.Label(root, image=photo_left_arrow)
label_left_arrow3.place(x=424, y=91, height=19, width=20)
label_left_arrow3.bind('<Button-1>', lambda event, arg=T3: on_click_left(event, arg))

T4 = Text(root, height=200, width=300)
T4.place(x=450, y=114, height=22, width=44)
T4.tag_configure("center", justify='center')
T4.insert("1.0", 1)
T4.tag_add("center", "1.0", "end")
T4.config(state='disabled')
label_right_arrow4 = tk.Label(root, image=photo_right_arrow)
label_right_arrow4.place(x=500, y=114, height=19, width=20)
label_right_arrow4.bind('<Button-1>', lambda event, arg=T4: on_click_right(event, arg))
label_left_arrow4 = tk.Label(root, image=photo_left_arrow)
label_left_arrow4.place(x=424, y=114, height=19, width=20)
label_left_arrow4.bind('<Button-1>', lambda event, arg=T4: on_click_left(event, arg))

T5 = Text(root, height=200, width=300)
T5.place(x=450, y=137, height=22, width=44)
T5.tag_configure("center", justify='center')
T5.insert("1.0", 1)
T5.tag_add("center", "1.0", "end")
T5.config(state='disabled')
label_right_arrow5 = tk.Label(root, image=photo_right_arrow)
label_right_arrow5.place(x=500, y=137, height=19, width=20)
label_right_arrow5.bind('<Button-1>', lambda event, arg=T5: on_click_right(event, arg))
label_left_arrow5 = tk.Label(root, image=photo_left_arrow)
label_left_arrow5.place(x=424, y=137, height=19, width=20)
label_left_arrow5.bind('<Button-1>', lambda event, arg=T5: on_click_left(event, arg))

T6 = Text(root, height=200, width=300)
T6.place(x=450, y=160, height=22, width=44)
T6.tag_configure("center", justify='center')
T6.insert("1.0", 1)
T6.tag_add("center", "1.0", "end")
T6.config(state='disabled')
label_right_arrow6 = tk.Label(root, image=photo_right_arrow)
label_right_arrow6.place(x=500, y=160, height=19, width=20)
label_right_arrow6.bind('<Button-1>', lambda event, arg=T6: on_click_right(event, arg))
label_left_arrow6 = tk.Label(root, image=photo_left_arrow)
label_left_arrow6.place(x=424, y=160, height=19, width=20)
label_left_arrow6.bind('<Button-1>', lambda event, arg=T6: on_click_left(event, arg))

T7 = Text(root, height=200, width=300)
T7.place(x=450, y=183, height=22, width=44)
T7.tag_configure("center", justify='center')
T7.insert("1.0", 1)
T7.tag_add("center", "1.0", "end")
T7.config(state='disabled')
label_right_arrow7 = tk.Label(root, image=photo_right_arrow)
label_right_arrow7.place(x=500, y=183, height=19, width=20)
label_right_arrow7.bind('<Button-1>', lambda event, arg=T7: on_click_right(event, arg))
label_left_arrow7 = tk.Label(root, image=photo_left_arrow)
label_left_arrow7.place(x=424, y=183, height=19, width=20)
label_left_arrow7.bind('<Button-1>', lambda event, arg=T7: on_click_left(event, arg))

T8 = Text(root, height=200, width=300)
T8.place(x=450, y=206, height=22, width=44)
T8.tag_configure("center", justify='center')
T8.insert("1.0", 1)
T8.tag_add("center", "1.0", "end")
T8.config(state='disabled')
label_right_arrow8 = tk.Label(root, image=photo_right_arrow)
label_right_arrow8.place(x=500, y=206, height=19, width=20)
label_right_arrow8.bind('<Button-1>', lambda event, arg=T8: on_click_right(event, arg))
label_left_arrow8 = tk.Label(root, image=photo_left_arrow)
label_left_arrow8.place(x=424, y=206, height=19, width=20)
label_left_arrow8.bind('<Button-1>', lambda event, arg=T8: on_click_left(event, arg))

T9 = Text(root, height=200, width=300)
T9.place(x=450, y=229, height=22, width=44)
T9.tag_configure("center", justify='center')
T9.insert("1.0", 1)
T9.tag_add("center", "1.0", "end")
T9.config(state='disabled')
label_right_arrow9 = tk.Label(root, image=photo_right_arrow)
label_right_arrow9.place(x=500, y=230, height=19, width=20)
label_right_arrow9.bind('<Button-1>', lambda event, arg=T9: on_click_right(event, arg))
label_left_arrow9 = tk.Label(root, image=photo_left_arrow)
label_left_arrow9.place(x=424, y=230, height=19, width=20)
label_left_arrow9.bind('<Button-1>', lambda event, arg=T9: on_click_left(event, arg))

T10 = Text(root, height=200, width=300)
T10.place(x=450, y=252, height=22, width=44)
T10.tag_configure("center", justify='center')
T10.insert("1.0", 1)
T10.tag_add("center", "1.0", "end")
T10.config(state='disabled')
label_right_arrow10 = tk.Label(root, image=photo_right_arrow)
label_right_arrow10.place(x=500, y=253, height=19, width=20)
label_right_arrow10.bind('<Button-1>', lambda event, arg=T10: on_click_right(event, arg))
label_left_arrow10 = tk.Label(root, image=photo_left_arrow)
label_left_arrow10.place(x=424, y=253, height=19, width=20)
label_left_arrow10.bind('<Button-1>', lambda event, arg=T10: on_click_left(event, arg))


def generate_dict_criteria():
    return {"Page size" : int(T1.get("1.0", END)),
            "Total edits": int(T2.get("1.0", END)),
            "Editors": int(T3.get("1.0", END)),
            "Page watchers": int(T4.get("1.0", END)),
            "Pageviews (60 days)": int(T5.get("1.0", END)),
            "Average time between edits (days)" : int(T6.get("1.0", END)),
            "Edits made by the top 10% of editors" : int(T7.get("1.0", END)),
            "Links to this page" : int(T8.get("1.0", END)),
            "Links from this page" : int(T9.get("1.0", END)),
            "External links" : int(T10.get("1.0", END)),
        }

def set_weights_plain(event):
    T1.config(state='normal')
    T1.delete("1.0", 'end')
    T1.insert("1.0", 10)
    T1.tag_add("center", "1.0", "end")
    T1.config(state='disabled')
    T2.config(state='normal')
    T2.delete("1.0", 'end')
    T2.insert("1.0", 5)
    T2.tag_add("center", "1.0", "end")
    T2.config(state='disabled')
    T3.config(state='normal')
    T3.delete("1.0", 'end')
    T3.insert("1.0", 2)
    T3.tag_add("center", "1.0", "end")
    T3.config(state='disabled')
    T4.config(state='normal')
    T4.delete("1.0", 'end')
    T4.insert("1.0", 16)
    T4.tag_add("center", "1.0", "end")
    T4.config(state='disabled')
    T5.config(state='normal')
    T5.delete("1.0", 'end')
    T5.insert("1.0", 20)
    T5.tag_add("center", "1.0", "end")
    T5.config(state='disabled')
    T6.config(state='normal')
    T6.delete("1.0", 'end')
    T6.insert("1.0", 3)
    T6.tag_add("center", "1.0", "end")
    T6.config(state='disabled')
    T7.config(state='normal')
    T7.delete("1.0", 'end')
    T7.insert("1.0", 3)
    T7.tag_add("center", "1.0", "end")
    T7.config(state='disabled')
    T8.config(state='normal')
    T8.delete("1.0", 'end')
    T8.insert("1.0", 10)
    T8.tag_add("center", "1.0", "end")
    T8.config(state='disabled')
    T9.config(state='normal')
    T9.delete("1.0", 'end')
    T9.insert("1.0", 12)
    T9.tag_add("center", "1.0", "end")
    T9.config(state='disabled')
    T10.config(state='normal')
    T10.delete("1.0", 'end')
    T10.insert("1.0", 12)
    T10.tag_add("center", "1.0", "end")
    T10.config(state='disabled')

def set_weights_research(event):
    T1.config(state='normal')
    T1.delete("1.0", 'end')
    T1.insert("1.0", 5)
    T1.tag_add("center", "1.0", "end")
    T1.config(state='disabled')
    T2.config(state='normal')
    T2.delete("1.0", 'end')
    T2.insert("1.0", 15)
    T2.tag_add("center", "1.0", "end")
    T2.config(state='disabled')
    T3.config(state='normal')
    T3.delete("1.0", 'end')
    T3.insert("1.0", 15)
    T3.tag_add("center", "1.0", "end")
    T3.config(state='disabled')
    T4.config(state='normal')
    T4.delete("1.0", 'end')
    T4.insert("1.0", 5)
    T4.tag_add("center", "1.0", "end")
    T4.config(state='disabled')
    T5.config(state='normal')
    T5.delete("1.0", 'end')
    T5.insert("1.0", 5)
    T5.tag_add("center", "1.0", "end")
    T5.config(state='disabled')
    T6.config(state='normal')
    T6.delete("1.0", 'end')
    T6.insert("1.0", 17)
    T6.tag_add("center", "1.0", "end")
    T6.config(state='disabled')
    T7.config(state='normal')
    T7.delete("1.0", 'end')
    T7.insert("1.0", 20)
    T7.tag_add("center", "1.0", "end")
    T7.config(state='disabled')
    T8.config(state='normal')
    T8.delete("1.0", 'end')
    T8.insert("1.0", 12)
    T8.tag_add("center", "1.0", "end")
    T8.config(state='disabled')
    T9.config(state='normal')
    T9.delete("1.0", 'end')
    T9.insert("1.0", 9)
    T9.tag_add("center", "1.0", "end")
    T9.config(state='disabled')
    T10.config(state='normal')
    T10.delete("1.0", 'end')
    T10.insert("1.0", 10)
    T10.tag_add("center", "1.0", "end")
    T10.config(state='disabled')

plain_reader_weights.bind('<Button-1>', set_weights_plain)
researcher_weights.bind('<Button-1>', set_weights_research)

israel_related = Text(root, height=200, width=300)
israel_related.place(x=348, y=345, height=22, width=280)
israel_related.insert("1.0", "insert path")
israel_related.tag_add("center", "1.0", "end")
other_values = Text(root, height=200, width=300)
other_values.place(x=348, y=368, height=22, width=280)
other_values.insert("1.0", "insert path")
other_values.tag_add("center", "1.0", "end")

israel_related_ratio = Text(root, height=200, width=300)
israel_related_ratio.place(x=240, y=411, height=22, width=88)
israel_related_ratio.tag_configure("center", justify='center')
israel_related_ratio.insert("1.0", "")
israel_related_ratio.tag_add("center", "1.0", "end")
israel_related_ratio.config(state='disabled')

other_values_ratio = Text(root, height=200, width=300)
other_values_ratio.place(x=240, y=434, height=22, width=88)
other_values_ratio.tag_configure("center", justify='center')
other_values_ratio.insert("1.0", "")
other_values_ratio.tag_add("center", "1.0", "end")
other_values_ratio.config(state='disabled')

quality_measure = Text(root, height=200, width=300)
quality_measure.place(x=240, y=457, height=22, width=88)
quality_measure.tag_configure("center", justify='center')
quality_measure.insert("1.0", "")
quality_measure.tag_add("center", "1.0", "end")
quality_measure.config(state='disabled')

def sel(event, val):
    global radio_button
    radio_button = val

R1 = Radiobutton(root, text = "", value = 1, background="#4472C4")
R1.place(x=25, y=315, height=35, width=35)
R1.bind('<Button-1>', lambda event, arg=1: sel(event, arg))

R2 = Radiobutton(root, text = "", value = 2, background="#4472C4")
R2.pack(anchor = W)
R2.place(x=25, y=347, height=35, width=35)
R2.bind('<Button-1>', lambda event, arg=2: sel(event, arg))

def calc(event):
    global radio_button
    if int(T1.get("1.0", END)) + int(T2.get("1.0", END)) + int(T3.get("1.0", END)) + int(T4.get("1.0", END)) + \
            int(T5.get("1.0", END)) + int(T6.get("1.0", END)) + int(T7.get("1.0", END)) + int(T8.get("1.0", END)) + \
            int(T9.get("1.0", END)) + int(T10.get("1.0", END)) == 0:
        return
    israel_related_ratio.config(state='normal')
    israel_related_ratio.delete("1.0", 'end')
    israel_related_ratio.insert("1.0", "" + "please")
    israel_related_ratio.tag_add("center", "1.0", "end")
    israel_related_ratio.config(state='disabled')
    other_values_ratio.config(state='normal')
    other_values_ratio.delete("1.0", 'end')
    other_values_ratio.insert("1.0", "" + "wait")
    other_values_ratio.tag_add("center", "1.0", "end")
    other_values_ratio.config(state='disabled')
    quality_measure.config(state='normal')
    quality_measure.delete("1.0", 'end')
    quality_measure.insert("1.0", "" + ":)")
    quality_measure.tag_add("center", "1.0", "end")
    quality_measure.config(state='disabled')

    if radio_button == 1:
        crawler.find_first_regular()
        crawler.find_first_random()
        isr_ratio = read_csvs_english_hebrew("wiki.csv", "wiki_en.csv", generate_dict_criteria())
        oth_ratio = read_csvs_english_hebrew("wiki_random.csv", "wiki_en_random.csv", generate_dict_criteria())
        ratio = isr_ratio / oth_ratio
    else:
        isr_path = israel_related.get("1.0", END)
        oth_path = other_values.get("1.0", END)
        crawler.parser_multiple_links_from_file(isr_path.strip(), is_random=False)
        crawler.parser_multiple_links_from_file(oth_path.strip(), is_random=True)
        isr_ratio = read_csvs_english_hebrew("wiki.csv", "wiki_en.csv", generate_dict_criteria())
        oth_ratio = read_csvs_english_hebrew("wiki_random.csv", "wiki_en_random.csv", generate_dict_criteria())
        ratio = isr_ratio / oth_ratio

    israel_related_ratio.config(state='normal')
    israel_related_ratio.delete("1.0", 'end')
    israel_related_ratio.insert("1.0", "" + str(isr_ratio))
    israel_related_ratio.tag_add("center", "1.0", "end")
    israel_related_ratio.config(state='disabled')
    other_values_ratio.config(state='normal')
    other_values_ratio.delete("1.0", 'end')
    other_values_ratio.insert("1.0", "" + str(oth_ratio))
    other_values_ratio.tag_add("center", "1.0", "end")
    other_values_ratio.config(state='disabled')
    quality_measure.config(state='normal')
    quality_measure.delete("1.0", 'end')
    quality_measure.insert("1.0", "" + str(ratio))
    quality_measure.tag_add("center", "1.0", "end")
    quality_measure.config(state='disabled')

image_calculate = Image.open("pictures/calculate.gif")
photo_calculate = ImageTk.PhotoImage(image_calculate)
calculate = tk.Label(root, image=photo_calculate)
calculate.place(x=430, y=420, height=49, width=157)
calculate.bind('<Button-1>', calc)

root.mainloop()